<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_road_start_point</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set variables
controlling_unit = instance_position(x,y,obj_unit)

x_dest = x
y_dest = y

cspeed = 10

on_road = controlling_unit.on_road
road_dest = controlling_unit.road_dest
road_dest_point = controlling_unit.road_dest_point

road_current = controlling_unit.road_dest
road_point_next = controlling_unit.road_point_next

cdirection = choose(0,1)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//rod switching
var closest_vert = instance_nearest(x,y,obj_road_start_parent)
if point_distance(x,y,closest_vert.x,closest_vert.y)&lt;5{
    if floor(random(2)) = 0{
        road_current = closest_vert.roadnum
        road_point_next = closest_vert.pointid
    }
}

if point_distance(x,y,x_dest,y_dest)&lt;5{
    if on_road = 1{
        if cdirection = 1{
            road_point_next += 1
        }
        if cdirection = 0{
            road_point_next -= 1
        }
        if road_point_next &lt;= obj_global.pointnum[road_current] &amp;&amp; road_point_next &gt;= 0{
            x_dest = obj_global.roadpointx[road_current,road_point_next]
            y_dest = obj_global.roadpointy[road_current,road_point_next]
        }
        else{
            instance_destroy()
        }
    }
}
else{
    var point_dir = point_direction(x,y,x_dest,y_dest);
    x += lengthdir_x(cspeed,point_dir)
    y += lengthdir_y(cspeed,point_dir)
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
