<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_road_point</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///point control

//find the road that this point belongs to
roadnum = obj_global.roadcount

//add 1 to point count for road number
obj_global.pointnum[roadnum] += 1
pointid = obj_global.pointnum[roadnum]
obj_global.roadpointx[roadnum,pointid] = x
obj_global.roadpointy[roadnum,pointid] = y

path_add_point(obj_global.road_path[roadnum],obj_global.roadpointx[roadnum,pointid],obj_global.roadpointy[roadnum,pointid],100)


//============ Setting corner angles =================
//angle
obj_global.roadpointangle[roadnum,pointid] = point_direction(obj_global.roadpointx[roadnum,pointid-1],obj_global.roadpointy[roadnum,pointid-1],x,y)

//set width points
//width = obj_global.width[roadnum]
obj_global.left_point_x[roadnum,pointid] = lengthdir_x( width/2, obj_global.roadpointangle[roadnum,pointid] -90)
obj_global.left_point_y[roadnum,pointid] = lengthdir_y( width/2, obj_global.roadpointangle[roadnum,pointid] -90)

obj_global.right_point_x[roadnum,pointid] = lengthdir_x( width/2, obj_global.roadpointangle[roadnum,pointid] +90)
obj_global.right_point_y[roadnum,pointid] = lengthdir_y( width/2, obj_global.roadpointangle[roadnum,pointid] +90)


//========= make previous corner face the new point /2 =============
if pointid -1 = 0{
    obj_global.roadpointangle[roadnum,pointid-1] = point_direction(obj_global.roadpointx[roadnum,pointid-1],obj_global.roadpointy[roadnum,pointid-1],x,y)
}
else{
    obj_global.roadpointangle[roadnum,pointid -1] -= angle_difference(obj_global.roadpointangle[roadnum,pointid -1],point_direction(obj_global.roadpointx[roadnum,pointid-1],obj_global.roadpointy[roadnum,pointid-1],x,y))/2
}

//set width points of previous corner again
obj_global.left_point_x[roadnum,pointid-1] = lengthdir_x( width/2, obj_global.roadpointangle[roadnum,pointid-1] -90)
obj_global.left_point_y[roadnum,pointid-1] = lengthdir_y( width/2, obj_global.roadpointangle[roadnum,pointid-1] -90)

obj_global.right_point_x[roadnum,pointid-1] = lengthdir_x( width/2, obj_global.roadpointangle[roadnum,pointid-1] +90)
obj_global.right_point_y[roadnum,pointid-1] = lengthdir_y( width/2, obj_global.roadpointangle[roadnum,pointid-1] +90)

//set colour and alpha
road_colour = obj_global.road_colour[roadnum]
road_alpha = obj_global.road_alpha[roadnum]
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if pointid != obj_global.pointnum[roadnum] &amp;&amp; pointid != 0{
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///temp corner markers
/*
draw_set_colour(c_green)
draw_circle(obj_global.roadpointx[roadnum,pointid] +obj_global.left_point_x[roadnum,pointid],obj_global.roadpointy[roadnum,pointid] +obj_global.left_point_y[roadnum,pointid],2,0)
draw_set_colour(c_red)
draw_circle(obj_global.roadpointx[roadnum,pointid] +obj_global.right_point_x[roadnum,pointid],obj_global.roadpointy[roadnum,pointid] +obj_global.right_point_y[roadnum,pointid],2,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
